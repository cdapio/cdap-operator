# Copyright 2019 The CDAP Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Base.Name}}
  namespace: {{.Base.Namespace}}
  {{if .Base.Labels}}
  labels:
    {{range $k,$v := .Base.Labels}}
    {{$k}}: "{{$v}}"
    {{end}}
  {{end}}
spec:
  selector:
    matchLabels:
      {{range $k,$v := .Base.Labels}}
      {{$k}}: "{{$v}}"
      {{end}}
  replicas: {{.Base.Replicas}}
  template:
    metadata:
      labels:
        {{range $k,$v := .Base.Labels }}
        {{$k}}: "{{$v}}"
        {{end}}
    spec:
      {{if .Base.ServiceAccountName}}
      serviceAccountName: {{.Base.ServiceAccountName}}
      {{end}}
      nodeSelector:
        {{range $k,$v := .Base.NodeSelector}}
        {{$k}}: "{{$v}}"
        {{end}}
      {{if .Base.RuntimeClassName}}
      runtimeClassName: {{.Base.RuntimeClassName}}
      {{end}}
      {{if .Base.PriorityClassName}}
      priorityClassName: {{.Base.PriorityClassName}}
      {{end}}
      terminationGracePeriodSeconds: 120
      {{range $c := .Containers}}
      containers:
        - name: {{$c.Name}}
          image: {{$c.Image}}
          workingDir: {{$c.WorkingDir}}
          command:
          {{range $v := $c.Command }}
            - {{$v}}
          {{end}}
          args:
          {{range $v := $c.Args }}
            - {{$v}}
          {{end}}
          {{if $c.ImagePullPolicy}}
          imagePullPolicy: {{$c.ImagePullPolicy}}
          {{end}}
          env:
          {{range $e := $c.Env }}
          - name: "{{$e.Name}}"
            value: "{{$e.Value}}"
          {{end}}
          resources:
            {{if $c.ResourceRequests}}
            requests:
              {{range $k, $v := $c.ResourceRequests}}
              {{$k}}: {{$v.String}}
              {{end}}
            {{end}}
            {{if $c.ResourceLimits}}
            limits:
              {{range $k, $v := $c.ResourceLimits}}
              {{$k}}: {{$v.String}}
              {{end}}
            {{end}}
          volumeMounts:
            - name: podinfo
              mountPath: /etc/podinfo
              readOnly: true
            - name: cdap-conf
              mountPath: /etc/cdap/conf
              readOnly: true
            - name: hadoop-conf
              mountPath: /etc/hadoop/conf
              readOnly: true
            - name: cdap-sysappconf
              mountPath: /opt/cdap/master/system-app-config
              readOnly: true
            {{if $.Base.SecuritySecret}}
            - name: cdap-security
              mountPath: /etc/cdap/security
              readOnly: true
            {{end}}
            {{range $k,$v := $.Base.ConfigMapVolumes}}
            - name: cdap-config-map-volumes-{{$k}}
              mountPath: {{$v}}
            {{end}}
      {{end}}
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "pod.labels.properties"
                fieldRef:
                  fieldPath: metadata.labels
              - path: "pod.name"
                fieldRef:
                  fieldPath: metadata.name
        - name: cdap-conf
          configMap:
            name: {{.Base.CConf}}
        - name: hadoop-conf
          configMap:
            name: {{.Base.HConf}}
        - name: cdap-sysappconf
          configMap:
            name: {{.Base.SysAppConf}}
        {{if .Base.SecuritySecret}}
        - name: cdap-security
          secret:
            secretName: {{.Base.SecuritySecret}}
        {{end}}
        {{range $k,$v := $.Base.ConfigMapVolumes}}
        - name: cdap-config-map-volumes-{{$k}}
          configMap:
            name: {{$k}}
        {{end}}
