
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: cdapmasters.cdap.cdap.io
spec:
  group: cdap.cdap.io
  names:
    kind: CDAPMaster
    listKind: CDAPMasterList
    plural: cdapmasters
    singular: cdapmaster
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: CDAPMaster is the Schema for the cdapmasters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: "CDAPMasterSpec defines the desired state of CDAPMaster \n
            Important notes: * The field name of each service MUST match the constant
            values of ServiceName in constants.go as reflection   is used to find
            field value. * For services that are optional (i.e. may or may not be
            required for CDAP to be operational), their service   specification fields
            are pointers. By default, these optional services are disabled. Set to
            non-nil to enable them."
          properties:
            appFabric:
              description: AppFabric is specification for the CDAP app-fabric service.
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
                storageClassName:
                  description: StorageClassName is the name of the StorageClass for
                    the persistent volume used by the service.
                  type: string
                storageSize:
                  description: StorageSize is specification for the persistent volume
                    size used by the service.
                  type: string
              type: object
            authentication:
              description: 'Auth is specification for the CDAP Auth service. This
                is an optional service and may not be required for CDAP to be operational.
                To disable this service: either omit or set the field to nil To enable
                this service: set it to a pointer to a AuthenticationSpec struct (can
                be an empty struct)'
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                replicas:
                  description: Replicas is number of replicas for the service.
                  format: int32
                  type: integer
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
              type: object
            config:
              additionalProperties:
                type: string
              description: Config is a set of configurations that goes into cdap-site.xml.
              type: object
            configMapVolumes:
              additionalProperties:
                type: string
              description: ConfigMapVolumes defines a map from ConfigMap names to
                volume mount path. Key is the configmap object name. Value is the
                mount path. This adds ConfigMap data to the directory specified by
                the volume mount path.
              type: object
            image:
              description: Image is the docker image name for the CDAP backend.
              type: string
            imagePullPolicy:
              description: ImagePullPolicy is the policy for pulling docker images
                on Pod creation.
              type: string
            locationURI:
              description: LocationURI is an URI specifying an object storage for
                CDAP.
              type: string
            logLevels:
              additionalProperties:
                type: string
              description: LogLevels is a set of logger name to log level settings.
              type: object
            logs:
              description: Logs is specification for the CDAP logging service.
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
                storageClassName:
                  description: StorageClassName is the name of the StorageClass for
                    the persistent volume used by the service.
                  type: string
                storageSize:
                  description: StorageSize is specification for the persistent volume
                    size used by the service.
                  type: string
              type: object
            messaging:
              description: Messaging is specification for the CDAP messaging service.
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
                storageClassName:
                  description: StorageClassName is the name of the StorageClass for
                    the persistent volume used by the service.
                  type: string
                storageSize:
                  description: StorageSize is specification for the persistent volume
                    size used by the service.
                  type: string
              type: object
            metadata:
              description: Metadata is specification for the CDAP metadata service.
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                replicas:
                  description: Replicas is number of replicas for the service.
                  format: int32
                  type: integer
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
              type: object
            metrics:
              description: Metrics is specification for the CDAP metrics service.
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
                storageClassName:
                  description: StorageClassName is the name of the StorageClass for
                    the persistent volume used by the service.
                  type: string
                storageSize:
                  description: StorageSize is specification for the persistent volume
                    size used by the service.
                  type: string
              type: object
            preview:
              description: Preview is specification for the CDAP preview service.
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
                storageClassName:
                  description: StorageClassName is the name of the StorageClass for
                    the persistent volume used by the service.
                  type: string
                storageSize:
                  description: StorageSize is specification for the persistent volume
                    size used by the service.
                  type: string
              type: object
            router:
              description: Router is specification for the CDAP router service.
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                replicas:
                  description: Replicas is number of replicas for the service.
                  format: int32
                  type: integer
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
                servicePort:
                  description: ServicePort is the port number for the service.
                  format: int32
                  type: integer
                serviceType:
                  description: ServiceType is the service type in kubernetes, default
                    is NodePort.
                  type: string
              type: object
            runtime:
              description: 'Runtime is specification for the CDAP runtime service.
                This is an optional service and may not be required for CDAP to be
                operational. To disable this service: either omit or set the field
                to nil To enable this service: set it to a pointer to a RuntimeSpec
                struct (can be an empty struct)'
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
                storageClassName:
                  description: StorageClassName is the name of the StorageClass for
                    the persistent volume used by the service.
                  type: string
                storageSize:
                  description: StorageSize is specification for the persistent volume
                    size used by the service.
                  type: string
              type: object
            secretVolumes:
              additionalProperties:
                type: string
              description: SecretVolumes defines a map from Secret names to volume
                mount path. Key is the secret object name. Value is the mount path.
                This adds Secret data to the directory specified by the volume mount
                path.
              type: object
            securityContext:
              description: SecurityContext defines the security context for all pods
                for all services.
              properties:
                allowPrivilegeEscalation:
                  description: AllowPrivilegeEscalation prevents the container process
                    from running SUID binaries. It is applied at the container level.
                  type: boolean
                fsGroup:
                  description: FSGroup mounts volumes as the specified group ID and
                    gives the primary user access to that group. It is applied at
                    the pod level.
                  format: int64
                  type: integer
                privileged:
                  description: Privileged runs container in privileged mode. It is
                    applied at the container level. Processes in privileged containers
                    are essentially equivalent to root on the host.
                  type: boolean
                readOnlyRootFilesystem:
                  description: ReadOnlyRootFilesystem specifies whether the container's
                    root filesystem is read-only. It is applied at the container level.
                  type: boolean
                runAsGroup:
                  description: RunAsGroup runs the pod as the specified group ID.
                    It is applied at the pod level.
                  format: int64
                  type: integer
                runAsNonRoot:
                  description: RunAsNonRoot indicates that the container must run
                    as a non-root user. If true, the Kubelet will validate the image
                    at runtime to ensure that it does not run as UID 0 (root) and
                    fail to start the container if it does.
                  type: boolean
                runAsUser:
                  description: RunAsUser runs the pod as the specified user ID. It
                    is applied at the pod level.
                  format: int64
                  type: integer
              type: object
            securitySecret:
              description: SecuritySecret is secret that contains security related
                configurations for CDAP.
              type: string
            serviceAccountName:
              description: ServiceAccountName is the service account for all the service
                pods.
              type: string
            systemappconfigs:
              additionalProperties:
                type: string
              description: SystemAppConfigs specifies configs used by CDAP to run
                system apps dynamically. Each entry is of format <filename, json app
                config> which will create a separate system config file with entry
                value as file content.
              type: object
            userInterface:
              description: UserInterface is specification for the CDAP UI service.
              properties:
                configMapVolumes:
                  additionalProperties:
                    type: string
                  description: ConfigMapVolumes defines a map from ConfigMap names
                    to volume mount path for this service Key is the configmap object
                    name. Value is the mount path. This adds ConfigMap data to the
                    directory specified by the volume mount path.
                  type: object
                env:
                  description: Env is a list of environment variables for the master
                    service container.
                  items:
                    description: EnvVar represents an environment variable present
                      in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded
                          using the previous defined environment variables in the
                          container and any service environment variables. If a variable
                          cannot be resolved, the reference in the input string will
                          be unchanged. The $(VAR_NAME) syntax can be escaped with
                          a double $$, ie: $$(VAR_NAME). Escaped references will never
                          be expanded, regardless of whether the variable exists or
                          not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value.
                          Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name,
                              metadata.namespace, metadata.labels, metadata.annotations,
                              spec.nodeName, spec.serviceAccountName, status.hostIP,
                              status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is
                                  written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified
                                  API version.
                                type: string
                            required:
                            - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only
                              resources limits and requests (limits.cpu, limits.memory,
                              limits.ephemeral-storage, requests.cpu, requests.memory
                              and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes,
                                  optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed
                                  resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                            - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind,
                                  uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                        type: object
                    required:
                    - name
                    type: object
                  type: array
                lifecycle:
                  description: Lifecycle is to specify Container Lifecycle hooks provided
                    by Kubernetes for containers. This will not be applied to the
                    init containers as init containers do not support lifecycle.
                  properties:
                    postStart:
                      description: 'PostStart is called immediately after a container
                        is created. If the handler fails, the container is terminated
                        and restarted according to its restart policy. Other management
                        of the container blocks until the hook completes. More info:
                        https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                    preStop:
                      description: 'PreStop is called immediately before a container
                        is terminated due to an API request or management event such
                        as liveness/startup probe failure, preemption, resource contention,
                        etc. The handler is not called if the container crashes or
                        exits. The reason for termination is passed to the handler.
                        The Pod''s termination grace period countdown begins before
                        the PreStop hooked is executed. Regardless of the outcome
                        of the handler, the container will eventually terminate within
                        the Pod''s termination grace period. Other management of the
                        container blocks until the hook completes or until the termination
                        grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                      properties:
                        exec:
                          description: One and only one of the following should be
                            specified. Exec specifies the action to take.
                          properties:
                            command:
                              description: Command is the command line to execute
                                inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem.
                                The command is simply exec'd, it is not run inside
                                a shell, so traditional shell instructions ('|', etc)
                                won't work. To use a shell, you need to explicitly
                                call out to that shell. Exit status of 0 is treated
                                as live/healthy and non-zero is unhealthy.
                              items:
                                type: string
                              type: array
                          type: object
                        httpGet:
                          description: HTTPGet specifies the http request to perform.
                          properties:
                            host:
                              description: Host name to connect to, defaults to the
                                pod IP. You probably want to set "Host" in httpHeaders
                                instead.
                              type: string
                            httpHeaders:
                              description: Custom headers to set in the request. HTTP
                                allows repeated headers.
                              items:
                                description: HTTPHeader describes a custom header
                                  to be used in HTTP probes
                                properties:
                                  name:
                                    description: The header field name
                                    type: string
                                  value:
                                    description: The header field value
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                            path:
                              description: Path to access on the HTTP server.
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Name or number of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                            scheme:
                              description: Scheme to use for connecting to the host.
                                Defaults to HTTP.
                              type: string
                          required:
                          - port
                          type: object
                        tcpSocket:
                          description: 'TCPSocket specifies an action involving a
                            TCP port. TCP hooks not yet supported TODO: implement
                            a realistic TCP lifecycle hook'
                          properties:
                            host:
                              description: 'Optional: Host name to connect to, defaults
                                to the pod IP.'
                              type: string
                            port:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Number or name of the port to access on
                                the container. Number must be in the range 1 to 65535.
                                Name must be an IANA_SVC_NAME.
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                      type: object
                  type: object
                metadata:
                  description: Metadata for the service.
                  type: object
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector is a selector which must be true for the
                    pod to fit on a node.
                  type: object
                priorityClassName:
                  description: PriorityClassName is to specify the priority of the
                    pods for this service.
                  type: string
                replicas:
                  description: Replicas is number of replicas for the service.
                  format: int32
                  type: integer
                resources:
                  description: Resources are Compute resources required by the service.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                runtimeClassName:
                  description: RuntimeClassName refers to a RuntimeClass object in
                    the node.k8s.io group, which should be used to run pods for this
                    service. If no RuntimeClass resource matches the named class,
                    pods will not be running.
                  type: string
                secretVolumes:
                  additionalProperties:
                    type: string
                  description: SecretVolumes defines a map from Secret names to volume
                    mount path for this service Key is the secret object name. Value
                    is the mount path. This adds Secret data to the directory specified
                    by the volume mount path.
                  type: object
                securityContext:
                  description: SecurityContext overrides the security context for
                    the service pods.
                  properties:
                    allowPrivilegeEscalation:
                      description: AllowPrivilegeEscalation prevents the container
                        process from running SUID binaries. It is applied at the container
                        level.
                      type: boolean
                    fsGroup:
                      description: FSGroup mounts volumes as the specified group ID
                        and gives the primary user access to that group. It is applied
                        at the pod level.
                      format: int64
                      type: integer
                    privileged:
                      description: Privileged runs container in privileged mode. It
                        is applied at the container level. Processes in privileged
                        containers are essentially equivalent to root on the host.
                      type: boolean
                    readOnlyRootFilesystem:
                      description: ReadOnlyRootFilesystem specifies whether the container's
                        root filesystem is read-only. It is applied at the container
                        level.
                      type: boolean
                    runAsGroup:
                      description: RunAsGroup runs the pod as the specified group
                        ID. It is applied at the pod level.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: RunAsNonRoot indicates that the container must
                        run as a non-root user. If true, the Kubelet will validate
                        the image at runtime to ensure that it does not run as UID
                        0 (root) and fail to start the container if it does.
                      type: boolean
                    runAsUser:
                      description: RunAsUser runs the pod as the specified user ID.
                        It is applied at the pod level.
                      format: int64
                      type: integer
                  type: object
                serviceAccountName:
                  description: ServiceAccountName overrides the service account for
                    the service pods.
                  type: string
                servicePort:
                  description: ServicePort is the port number for the service.
                  format: int32
                  type: integer
                serviceType:
                  description: ServiceType is the service type in kubernetes, default
                    is NodePort.
                  type: string
              type: object
            userInterfaceImage:
              description: UserInterfaceImage is the docker image name for the CDAP
                UI.
              type: string
          required:
          - locationURI
          type: object
        status:
          description: CDAPMasterStatus defines the observed state of CDAPMaster
          properties:
            components:
              description: Object status array for all matching objects
              items:
                description: ObjectStatus is a generic status holder for objects
                properties:
                  group:
                    description: Object group
                    type: string
                  kind:
                    description: Kind of object
                    type: string
                  link:
                    description: Link to object
                    type: string
                  name:
                    description: Name of object
                    type: string
                  pdb:
                    description: PDB status
                    properties:
                      currenthealthy:
                        description: currentHealthy
                        format: int32
                        type: integer
                      desiredhealthy:
                        description: desiredHealthy
                        format: int32
                        type: integer
                    required:
                    - currenthealthy
                    - desiredhealthy
                    type: object
                  status:
                    description: 'Status. Values: InProgress, Ready, Unknown'
                    type: string
                  sts:
                    description: StatefulSet status
                    properties:
                      currentcount:
                        description: CurrentReplicas defines the no of MySQL instances
                          that are created
                        format: int32
                        type: integer
                      progress:
                        description: 'progress is a fuzzy indicator. Interpret as
                          a percentage (0-100) eg: for statefulsets, progress = 100*readyreplicas/replicas'
                        format: int32
                        type: integer
                      readycount:
                        description: ReadyReplicas defines the no of MySQL instances
                          that are ready
                        format: int32
                        type: integer
                      replicas:
                        description: Replicas defines the no of MySQL instances desired
                        format: int32
                        type: integer
                    required:
                    - currentcount
                    - progress
                    - readycount
                    - replicas
                    type: object
                type: object
              type: array
            conditions:
              description: Conditions represents the latest state of the object
              items:
                description: Condition describes the state of an object at a certain
                  point.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: Last time the condition was probed
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                - status
                - type
                type: object
              type: array
            downgradeStartTimeMillis:
              description: DowngradeStartTimeMillis is the start time in milliseconds
                of the downgrade process
              format: int64
              type: integer
            imageToUse:
              description: ImageToUse is the Docker image of CDAP backend the operator
                uses to deploy.
              type: string
            observedGeneration:
              description: ObservedGeneration is the most recent generation observed.
                It corresponds to the Object's generation, which is updated on mutation
                by the API Server.
              format: int64
              type: integer
            upgradeStartTimeMillis:
              description: UpgradeStartTimeMillis is the start time in milliseconds
                of the upgrade process
              format: int64
              type: integer
            userInterfaceImageToUse:
              description: UserInterfaceImageToUse is the Docker image of CDAP UI
                the operator uses to deploy.
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
